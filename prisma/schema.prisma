generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name      String
  createdAt DateTime  @default(now())
  products  Product[]
}

model Product {
  id            String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name          String
  description   String?
  price         Float
  imageUrl      String?
  is_active     Boolean         @default(true)
  createdAt     DateTime        @default(now())
  categoryId    String          @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  cartItems     CartItem[]
  category      Category        @relation(fields: [categoryId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  UserFavorites UserFavorites[]
}

model Roles {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name      String
  createdAt DateTime @default(now())
}

model UserRoles {
  userId    String   @db.Uuid
  roleId    String   @db.Uuid
  createdAt DateTime @default(now())
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
}

model Cart {
  id            String     @id @default(uuid()) @db.Uuid
  userId        String     @db.Uuid
  totalPrice    Float      @default(0)
  totalQuantity Int        @default(0)
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  items         CartItem[] @relation("CartItems")
}

model CartItem {
  id        String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  cartId    String  @db.Uuid
  productId String  @db.Uuid
  quantity  Int     @default(1)
  cart      Cart    @relation("CartItems", fields: [cartId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}

model UserFavorites {
  id        String   @id(map: "Favorite_pkey") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId    String   @db.Uuid
  productId String   @db.Uuid
  createdAt DateTime @default(now())
  Product   Product  @relation(fields: [productId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Favorite_productId_fkey")
}
